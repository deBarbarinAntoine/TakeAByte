<div class="main">
    <div class="order-ctn">
        <%######################################################################################%>
        <%#       Shipping Template                                                             %>
        <%######################################################################################%>
        <%
        // Function to determine CSS classes for order steps
        const attributeClasses = (index) => {
            const classes = ['', '', ''];
            if (index < 0 || index > 2) return classes; // Invalid index check
            for (let i = 0; i < index; ++i ) {
                classes[i] = ' previous'; // Mark all previous steps
            }
            classes[index] = ' current'; // Mark the current step
            return classes;
        };

        // Variables to hold the order page classes and the current page name
        let orderPage;
        let pageName;

        // Determine the current step based on data.page
        switch (data.page) {
            case 'address':
                orderPage = attributeClasses(0); // First step
                pageName = 'address';
                break;
            case 'shipping':
                orderPage = attributeClasses(1); // Second step
                pageName = 'shipping';
                break;
            case 'payment':
                orderPage = attributeClasses(2); // Third step
                pageName = 'payment';
                break;
        }
        %>

        <% if (!!pageName) { %>
            <%- include(`../partials/${pageName}`, { orderPage: orderPage, data: data.client }); %>
        <% } %>
    </div>
    <div class="cart-resume-ctn">
        <%######################################################################################%>
        <%#       Cart Resume Template                                                          %>
        <%######################################################################################%>
        <%- include('../partials/cart-resume', {order: data.order}); %>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const amount = `<%= data.order.subtotal %>`;
        const form = document.querySelector('.order-form');
        const modal = document.getElementById('errorModal');
        const modalContent = document.querySelector('.modal-content');
        const closeButton = document.querySelector('.close');
        const errorMessage = document.getElementById('errorMessage');

        closeButton.onclick = function() {
            modalContent.hidden = true;
            modal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modalContent.hidden = true;
                modal.style.display = "none";
            }
        }

        form.addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent default form submission

            // Retrieve payment details from the form
            const cardNumber = document.getElementById('card-number').value;
            const cardHolder = document.getElementById('card-holder').value;
            const expiration = document.getElementById('expiration').value;
            const cvv = document.getElementById('cvv').value;
            // Create payment object
            const paymentData = {
                cardNumber,
                cardHolder,
                expiration,
                cvv,
                amount
            };

            try {
                // Make POST request to /checkout using Axios
                const response = await axios.post('/checkout', paymentData);

                // Check if the response status is 200
                if (response.status === 200) {
                    // Redirect to /paymentOk
                    window.location.href = '/paymentOk';
                } else {
                    // Handle other response statuses if needed
                }

            } catch (error) {
                // Handle error if request fails
                errorMessage.innerText = error.response.data.error;
                modalContent.hidden = false;
                closeButton.hidden = false;
                modal.style.display = "block";
            }
        });
    });
</script>
