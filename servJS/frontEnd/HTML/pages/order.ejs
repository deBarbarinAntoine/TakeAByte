<div class="main relative">

    <%#         Payment Error Popup (Modal)         %>
    <div class="popup-msg abs full">
        <div id="errorModal" class="modal big-shadow">
            <div class="modal-content full" hidden>
                <svg class="close" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path class="line" d="M12 2.84952C17.0536 2.84952 21.1504 6.94633 21.1504 12C21.1504 17.0537 17.0536 21.1505 12 21.1505C6.9463 21.1505 2.84949 17.0537 2.84949 12C2.84949 6.94633 6.9463 2.84952 12 2.84952Z" />
                    <path class="line" d="M10.1597 10.1647L13.8301 13.8352" stroke-linecap="round"/>
                    <path class="line" d="M13.8301 10.1648L10.1596 13.8352" stroke-linecap="round"/>
                </svg>
                <svg class="warning-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path class="body" fill-rule="evenodd" clip-rule="evenodd" d="M13.0618 4.4295C12.6211 3.54786 11.3635 3.54786 10.9228 4.4295L3.88996 18.5006C3.49244 19.2959 4.07057 20.2317 4.95945 20.2317H19.0252C19.914 20.2317 20.4922 19.2959 20.0947 18.5006L13.0618 4.4295ZM9.34184 3.6387C10.4339 1.45376 13.5507 1.45377 14.6428 3.63871L21.6756 17.7098C22.6608 19.6809 21.228 22 19.0252 22H4.95945C2.75657 22 1.32382 19.6809 2.30898 17.7098L9.34184 3.6387Z" />
                    <path class="line" d="M12 8V13" stroke-linecap="round"/>
                    <path class="line" d="M12 16L12 16.5" stroke-linecap="round"/>
                </svg>
                <p id="errorMessage"></p>
            </div>
        </div>
    </div>

    <div class="order-ctn">
        <%######################################################################################%>
        <%#       Shipping Template                                                             %>
        <%######################################################################################%>
        <div>
            <pre><%= console.log((data));%></pre>
        </div>
        <%
        // Function to determine CSS classes for order steps
        const attributeClasses = (index) => {
            const classes = ['', '', ''];
            if (index < 0 || index > 2) return classes; // Invalid index check
            for (let i = 0; i < index; ++i ) {
                classes[i] = ' previous'; // Mark all previous steps
            }
            classes[index] = ' current'; // Mark the current step
            return classes;
        };

        // Variables to hold the order page classes and the current page name
        let orderPage;
        let pageName;

        // Determine the current step based on data.page
        switch (data.page) {
            case 'address':
                orderPage = attributeClasses(0); // First step
                pageName = 'address';
                break;
            case 'shipping':
                orderPage = attributeClasses(1); // Second step
                pageName = 'shipping';
                break;
            case 'payment':
                orderPage = attributeClasses(2); // Third step
                pageName = 'payment';
                break;
            case 'payment-confirmed':
                orderPage = attributeClasses(2); // 4th step
                pageName = 'payment-confirmed';
                break;
        }
        %>

        <% if (!!pageName) { %>
            <%- include(`../partials/${pageName}`, { orderPage: orderPage, data: data.client }); %>
        <% } %>
    </div>
    <div class="cart-resume-ctn">
        <%######################################################################################%>
        <%#       Cart Resume Template                                                          %>
        <%######################################################################################%>
        <%- include('../partials/cart-resume', {order: data.order}); %>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const amount = `<%= data.order.subtotal %>`;
        const form = document.querySelector('.order-form');
        const modal = document.getElementById('errorModal');
        const popup = document.querySelector('.popup-msg');
        const modalContent = document.querySelector('.modal-content');
        const closeButton = document.querySelector('.close');
        const errorMessage = document.getElementById('errorMessage');

        function hidePopup(event, element) {
            if (event.target !== element) {
                event.stopPropagation();
                return;
            }
            modalContent.hidden = true;
            modal.style.display = "none";
            popup.style.display = 'none';
        }

        closeButton.onclick = function (event) {
            hidePopup(event, closeButton);
        }

        popup.onclick = function (event) {
            hidePopup(event, popup);
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modalContent.hidden = true;
                modal.style.display = "none";
                popup.style.display = 'none';
            }
        }

        form.addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent default form submission

            // Retrieve payment details from the form
            const cardNumber = document.getElementById('card-number').value;
            const cardHolder = document.getElementById('card-holder').value;
            const expiration = document.getElementById('expiration').value;
            const cvv = document.getElementById('cvv').value;
            // Create payment object
            const paymentData = {
                cardNumber,
                cardHolder,
                expiration,
                cvv,
                amount
            };

            try {
                // Make POST request to /checkout using Axios
                const response = await axios.post('/checkout', paymentData);

                // Check if the response status is 200
                if (response.status === 200) {
                    // Redirect to /paymentOk
                    window.location.href = '/paymentOk';
                } else {
                    // Handle other response statuses if needed
                }

            } catch (error) {
                // Handle error if request fails
                errorMessage.innerText = error.response.data.error;
                modalContent.hidden = false;
                closeButton.hidden = false;
                modal.style.display = "flex";
                popup.style.display = 'flex';
            }
        });
    });
</script>
