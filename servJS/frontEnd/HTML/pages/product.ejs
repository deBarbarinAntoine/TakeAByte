<div class="main-column gap5 padding-top3">

    <%######################################################################################%>
    <%#       Title Nav Template                                                            %>
    <%######################################################################################%>
    <%- include('../partials/stroll-nav', {data: data.navData}); %>

    <div class="product-ctn">
        <div class="product">
            <div class="product-carousel">
                <div class="product-img">
                    <div class="favorite-button">
                        <svg class="favorite-icon" height="256px" width="256px" version="1.1" id="Layer_1"
                             xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                             viewBox="-10.24 -10.24 532.48 532.48" xml:space="preserve" fill="#112D4E" stroke="#112D4E"
                             stroke-width="6"><g id="SVGRepo_bgCarrier" stroke-width="0"/>
                            <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"/>
                            <g id="SVGRepo_iconCarrier">
                                <g>
                                    <path style="fill:#112D4E;"
                                          d="M472.081,81.12c54.108,55.344,53.083,145.433-2.301,200.816L293.442,458.262 c-10.254,10.254-23.715,15.368-37.19,15.368c-13.461,0.013-26.923-5.114-37.176-15.368L41.594,280.78 C14.776,253.962,0,218.298,0,180.372s14.776-73.591,41.594-100.408C68.424,53.133,104.076,38.37,142.015,38.37 c37.913,0,73.577,14.763,100.395,41.594l13.856,13.856l13.843-13.856c26.831-26.831,62.495-41.594,100.421-41.594 C409.06,38.37,445.119,53.554,472.081,81.12z M451.179,263.349c45.248-45.248,46.195-118.747,2.103-163.85 c-21.967-22.466-51.361-34.837-82.753-34.837c-30.906,0-59.958,12.028-81.82,33.89l-53.661,53.701 c-2.563,2.563-5.929,3.852-9.294,3.852c-3.365,0-6.731-1.275-9.294-3.839c-5.14-5.14-5.14-13.461,0-18.601l21.231-21.244 l-13.869-13.869c-21.862-21.862-50.914-33.89-81.807-33.89c-30.906,0-59.971,12.028-81.833,33.89 c-21.848,21.862-33.89,50.914-33.89,81.82s12.042,59.958,33.89,81.82l177.482,177.482c10.254,10.241,26.936,10.241,37.176,0 L451.179,263.349z"/>
                                    <path style="fill:#112D4E;"
                                          d="M466.297,174.404c0.447,7.243-5.074,13.488-12.318,13.935c-0.276,0.013-0.552,0.026-0.815,0.026 c-6.902,0-12.686-5.364-13.12-12.344c-1.039-16.971-8.229-32.93-20.232-44.933c-8.519-8.519-19.062-14.697-30.485-17.878 c-6.994-1.946-11.082-9.189-9.136-16.183c1.946-6.994,9.189-11.095,16.183-9.15c15.788,4.404,30.314,12.909,42.027,24.622 C454.939,129.037,464.851,151.03,466.297,174.404z"/>
                                </g>
                                <path class="favorite-fill"
                                      d="M453.283,99.498c44.091,45.103,43.145,118.602-2.103,163.85L274.841,439.674 c-10.241,10.241-26.923,10.241-37.176,0L60.182,262.192c-21.848-21.862-33.89-50.914-33.89-81.82s12.042-59.958,33.89-81.82 c21.862-21.862,50.927-33.89,81.833-33.89c30.893,0,59.945,12.028,81.807,33.89l13.869,13.869l-21.231,21.244 c-5.14,5.14-5.14,13.461,0,18.601c2.563,2.563,5.929,3.839,9.294,3.839s6.731-1.288,9.294-3.852l53.661-53.701 c21.862-21.862,50.914-33.89,81.82-33.89C401.922,64.662,431.316,77.032,453.283,99.498z M453.979,188.338 c7.243-0.447,12.765-6.691,12.318-13.935c-1.446-23.373-11.358-45.366-27.896-61.904c-11.713-11.713-26.239-20.218-42.027-24.622 c-6.994-1.946-14.237,2.156-16.183,9.15c-1.946,6.994,2.143,14.237,9.136,16.183c11.424,3.181,21.967,9.36,30.485,17.878 c12.002,12.002,19.193,27.961,20.232,44.933c0.434,6.98,6.218,12.344,13.12,12.344C453.427,188.364,453.703,188.351,453.979,188.338 z"/>
                            </g>
                        </svg>
                    </div>
                    <img src="<%= data.product.images[0] %>"
                         onerror="this.onerror=null;this.src='/static/img/image-not-found.webp'"
                         alt="<%= data.product.name %> image"/>
                </div>
                <div class="previews">
                    <% data.product.images.forEach(function (img) { %>
                        <img src="<%= img %>"
                             onerror="this.onerror=null;this.src='/static/img/image-not-found.webp'"
                             alt="<%= data.product.name %> image"/>
                    <% }); %>
                </div>
            </div>
            <div class="product-info">
                <div class="generic">
                    <div class="name"><%= data.product.name %></div>
                    <div class="description"><%= data.product.description %></div>
                </div>
                <div class="quantity-price">
                    <div class="title">Quantity</div>
                    <div class="quantity">
                        <div class="minus">
                            <div class="text">-</div>
                        </div>
                        <div class="product-quantity">
                            <div class="text">1</div>
                        </div>
                        <div class="plus">
                            <div class="text">+</div>
                        </div>
                    </div>
                    <div class="price"><%= data.product.price %></div>
                </div>
                <div class="colors">
                    <div class="title">Color</div>
                    <div class="color-list">
                        <% data.product.colors.forEach(function (color) { %>
                            <div class="color" style="background-color: <%= color %>>"></div>
                        <% }); %>
                    </div>
                </div>
                <div class="miscellaneous">
                    <div class="specification">
                        <div class="title">Brand</div>
                        <div class="content"><%= data.product.brand %></div>
                    </div>
                    <% data.product.miscellaneous.forEach(function (spec) { %>
                        <div class="specification">
                            <div class="title"><%= spec.name %></div>
                            <div class="content"><%= spec.content %></div>
                        </div>
                    <% }); %>
                </div>
                <div class="button white"><img src="/static/img/icon/cart.png" alt="cart icon"/> + Add to cart</div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get elements
        const quantityContainer = document.querySelector('.quantity');
        const quantityDisplay = document.querySelector('.product-quantity .text');
        const minusButton = document.querySelector('.minus');
        const plusButton = document.querySelector('.plus');
        const price = document.querySelector('.price');
        const addToCartButton = document.querySelector('.button.white');

        // Initial quantity
        let quantity = 1;
        updateQuantityDisplay();

        // Event listeners for plus and minus buttons
        minusButton.addEventListener('click', decreaseQuantity);
        plusButton.addEventListener('click', increaseQuantity);

        function decreaseQuantity() {
            if (quantity > 0) {
                quantity--;
                updateQuantityDisplay();
            }
        }

        function increaseQuantity() {
            if (quantity < <%= data.quantityStock %>) {
                quantity++;
                updateQuantityDisplay();
            }
        }

        function updateQuantityDisplay() {
            quantityDisplay.textContent = quantity;
            // Extracting numerical value from data.product.price
            const priceValue = parseFloat('<%= data.product.price.replace(/[^\d.-]/g, "") %>');
            price.textContent = quantity * priceValue;

            // Disable add to cart button if quantity stock is 0
            if (<%= data.quantityStock %> ===
            0
        )
            {
                addToCartButton.disabled = true;
            }
        else
            {
                addToCartButton.disabled = false;
            }
        }


        // Event listener for "Add to cart" button
        addToCartButton.addEventListener('click', function () {
            const itemId = window.location.pathname.split('/').pop();
            const itemPrice = parseFloat('<%= data.product.price.replace(/[^\d.-]/g, "") %>');
            // Create data object for the POST request body
            const data = {
                itemId: itemId,
                itemPrice: itemPrice,
                quantity: quantity
            };

            // Send POST request
            fetch('/cartAdd', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    // Handle response if needed
                    console.log('Item added to cart successfully.');
                })
                .catch(error => {
                    console.error('Error adding item to cart:', error);
                });
        });
    });
</script>