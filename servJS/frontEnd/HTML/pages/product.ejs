<div class="main-column padding-top3">

    <%######################################################################################%>
    <%#       Title Nav Template                                                            %>
    <%######################################################################################%>
    <%- include('../partials/stroll-nav', {data: data.navData}); %>
    <div class="product-ctn">
        <div class="product">
            <div class="product-carousel-ctn">
                <div class="product-carousel swiper-container">
                    <div class="favorite-button<% if (!!data.product.isFavorite && data.product.isFavorite) { %><%= ' favorite' %><% } %>">
                        <svg class="favorite-icon" viewBox="0 0 128 128" version="1.1" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g class="st0" id="Layer_1"/><g id="Layer_2">
                                <path class="st2" d="M57.3,32.7c-9.2-9.2-24.1-9.2-33.3,0c-9.2,9.2-9.2,24.1,0,33.3l6.7,6.7L64,106l33.3-33.3L104,66   c9.2-9.2,9.2-24.1,0-33.3s-24.1-9.2-33.3,0L64,39.4"/>
                                <path class="st2" d="M29.1,49.1c0-6.9,5.6-12.4,12.4-12.4"/></g>
                        </svg>
                    </div>
                    <div class="product-img swiper-wrapper">
                        <% data.product.images.forEach(function (img) { %>
                            <img class="swiper-slide" src="<%= img %>"
                                 onerror="this.onerror=null;this.src='/static/img/image-not-found.webp'"
                                 alt="<%= data.product.name %> image"/>
                        <% }); %>
                    </div>
                </div>
                <div class="previews swiper-container">
                    <div class="product-img swiper-wrapper">
                        <% data.product.images.forEach(function (img) { %>
                            <img class="swiper-slide" src="<%= img %>"
                                 onerror="this.onerror=null;this.src='/static/img/image-not-found.webp'"
                                 alt="<%= data.product.name %> image"/>
                        <% }); %>
                    </div>
                </div>
            </div>
            <div class="product-info">
                <div class="generic">
                    <div class="name"><%= data.product.name %></div>
                    <div class="description"><%= data.product.description %></div>
                </div>
                <div class="quantity-price">
                    <div class="title">Quantity</div>
                    <div class="quantity">
                        <div class="minus">
                            <div class="text">-</div>
                        </div>
                        <div class="product-quantity">
                            <div class="text">1</div>
                        </div>
                        <div class="plus">
                            <div class="text">+</div>
                        </div>
                    </div>
                    <div class="price">
                            <%= data.product.price %>
                    </div>
                </div>
                <div class="colors">
                    <div class="title">Color</div>
                    <div class="color-list">
                        <% data.product.colors.forEach(function (color) { %>
                            <div class="color" style="background-color: <%= color %>>"></div>
                        <% }); %>
                    </div>
                </div>
                <div class="miscellaneous">
                    <div class="specification">
                        <div class="title">Brand</div>
                        <div class="content"><%= data.product.brand %></div>
                    </div>
                    <% data.product.miscellaneous.forEach(function (spec) { %>
                        <div class="specification">
                            <div class="title"><%= spec.name %></div>
                            <div class="content"><%= spec.content %></div>
                        </div>
                    <% }); %>
                </div>
                <div class="button white">
                    <svg class="cart-img" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path class="line" d="M2.83179 4.38657H3.34341C4.20256 4.38657 4.96125 4.94691 5.21392 5.76808L8.27786 15.7259C8.53053 16.547 9.28921 17.1074 10.1484 17.1074H17.1114C17.9373 17.1074 18.6743 16.5889 18.9534 15.8116L20.9925 10.1312C21.679 8.21867 20.2616 6.20383 18.2295 6.20383H10.66" stroke-linecap="round"/>
                        <circle class="wheel" cx="10.1707" cy="20.5322" r="1.46779"/>
                        <circle class="wheel" cx="17.0204" cy="20.5322" r="1.46779"/>
                    </svg>
                    + Add to cart
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script>

    const thumbsSwiper = new Swiper(`.previews`, {
        slidesPerView: 3,
        spaceBetween: 0,
        slideToClickedSlide: true,
        loop: true,
        loopedSlides: 3
    });
    const mainSwiper = new Swiper('.product-carousel', {
        slidesPerView: 1,
        loop: true,
        autoplay: {
            delay: 10_000, // 10 seconds tempo for autoplay
            enabled: true,
            pauseOnMouseEnter: true,
        },
        mousewheel: {
            enabled: true,
            releaseOnEdges: true,
        },
        keyboard: {
            enabled: true,
            onlyInViewport: true,
        },
        loopedSlides: 3,
        thumbs: {
            swiper: thumbsSwiper
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        // Get elements
        const quantityDisplay = document.querySelector('.product-quantity .text');
        const minusButton = document.querySelector('.minus');
        const plusButton = document.querySelector('.plus');
        let price = document.querySelector('.price');
        const addToCartButton = document.querySelector('.button.white');
        let quantity;
        let discountedPrice
        let priceValue
        let reduction
        // Initial quantity
        if('<%= data.quantityStock %>' === "0"){
            quantity = 0;
        }else{
            quantity =1;
        }

        if ('<%= data.product.promotion %>' && '<%= data.product.promotion.reduction %>' && '<%= data.product.promotion.reduction %>' > 0) {
            // Calculate the discounted price if promotion and reduction are defined
            let originalPrice = parseFloat('<%= data.product.price %>'); // Convert price to a float
            reduction = parseFloat('<%= data.product.promotion.reduction %>'); // Convert reduction to a float
            discountedPrice = originalPrice - (originalPrice * (reduction / 100));
            price.textContent = discountedPrice.toFixed(2) + ' €'; // Update textContent with formatted discounted price
        } else {
            // If no promotion or reduction, display the original price
            let originalPrice = parseFloat('<%= data.product.price %>');
            price.textContent = originalPrice.toFixed(2) + ' €'; // Update textContent with formatted original price
        }

        updateQuantityDisplay();

        // Event listeners for plus and minus buttons
        minusButton.addEventListener('click', decreaseQuantity);
        plusButton.addEventListener('click', increaseQuantity);

        function decreaseQuantity() {
            if (quantity > 0) {
                quantity--;
                updateQuantityDisplay();
            }
        }

        function increaseQuantity() {
            if (quantity < '<%= data.quantityStock %>') {
                quantity++;
                updateQuantityDisplay();
            }
        }


        function updateQuantityDisplay() {
            quantityDisplay.textContent = quantity;
            // Extracting numerical value from data.product.price
            if (discountedPrice){
                priceValue = discountedPrice
                const totPrice = quantity * priceValue;
                price.textContent = 'Sales ! -'+ reduction + ' % '  + totPrice + '€';
            }else {
                priceValue = parseFloat('<%= data.product.price.replace(/[^\d.-]/g, "") %>');
                const totPrice = quantity * priceValue;
                price.textContent = totPrice + '€';
            }


            // Disable add to cart button if quantity stock is 0
            addToCartButton.disabled = '<%= data.quantityStock %>' === 0;
        }


        // Event listener for "Add to cart" button
        addToCartButton.addEventListener('click', function () {
            const itemId = window.location.pathname.split('/').pop();
            let itemPrice;
            if (discountedPrice) {
                itemPrice = discountedPrice
            } else {
                itemPrice = parseFloat('<%= data.product.price.replace(/[^\d.-]/g, "") %>');
            }
            // Create data object for the POST request body
            const data = {
                itemId: itemId,
                itemPrice: itemPrice,
                quantity: quantity
            };

            // Send POST request
            fetch('/cartAdd', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (response.ok) {
                        // Redirect to /cart
                        window.location.href = '/cart';
                    } else {
                        // Handle other responses if needed
                        console.log('Item could not be added to cart.');
                    }
                })
                .catch(error => {
                    console.error('Error adding item to cart:', error);
                });
        });
    });
</script>