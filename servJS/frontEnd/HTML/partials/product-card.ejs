<div class="product-card small-shadow swiper-slide">
    <a href="/product/<%= product.id %>" class="product-card-link"></a>

    <div class="product-card-img">
        <div class="favorite-button" data-product-id="<%= product.id %>">
            <% if (!!product.isDashboard && product.isDashboard) { %>
                <svg class="favorite-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path class="path-delete-icon" d="M5.73708 6.54391V18.9857C5.73708 19.7449 6.35257 20.3604 7.11182 20.3604H16.8893C17.6485 20.3604 18.264 19.7449 18.264 18.9857V6.54391M2.90906 6.54391H21.0909" stroke-linecap="round"/>
                    <path class="path-delete-icon" d="M8 6V4.41421C8 3.63317 8.63317 3 9.41421 3H14.5858C15.3668 3 16 3.63317 16 4.41421V6" stroke-linecap="round"/>
                </svg>
            <% } else { %>
                <svg class="favorite-icon" viewBox="0 0 128 128" version="1.1" xml:space="preserve"
                     xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g class="st0" id="Layer_1"/>
                    <g id="Layer_2">
                        <path class="st2"
                              d="M57.3,32.7c-9.2-9.2-24.1-9.2-33.3,0c-9.2,9.2-9.2,24.1,0,33.3l6.7,6.7L64,106l33.3-33.3L104,66c9.2-9.2,9.2-24.1,0-33.3s-24.1-9.2-33.3,0L64,39.4"/>
                        <path class="st2"
                              d="M29.1,49.1c0-6.9,5.6-12.4,12.4-12.4"/>
                    </g>
                </svg>
            <% } %>
        </div>
        <img src="<%= product.image %>"
             onerror="this.onerror=null;this.src='/static/img/image-not-found.webp'" alt="<%= product.name %> image"/>
    </div>
    <div class="product-card-description">
        <div class="title"><%= product.name %></div>
        <div class="price-ctn">
            <div class="alert">ON SALE</div>
            <div class="price"><%= product.price %>â‚¬</div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Retrieve all favorite buttons
        const favoriteButtons = document.querySelectorAll('.favorite-button');

        // Function to update the favorite status from the server
        function updateFavoriteStatus() {
            favoriteButtons.forEach(button => {
                <% if (!!product.isDashboard && product.isDashboard) { %>
                    button.addEventListener('click', ()=> {
                        setTimeout(() => location.reload(), 400);
                    });
                <% } %>
                const productId = button.getAttribute('data-product-id');

                // Make an AJAX call to get the favorite status
                axios.get(`/api/favStatus/${productId}`)
                    .then(response => {
                        if (response.data.isFavorite) {
                            button.querySelector('.favorite-icon').classList.add('favorite');
                        } else {
                            button.querySelector('.favorite-icon').classList.remove('favorite');
                        }
                    })
                    .catch(error => {
                        console.error('Error occurred:', error);
                    });
            });
        }

        updateFavoriteStatus();
    });
</script>